extends layout

block content
    #map
    style.
        html, body {
            height: 100%;
            overflow: hidden;
        }
        #map{
            width: 100%;
            height: 100%;
        }
    script.
        var hash = location.hash.substr(1);
        var user_id = hash.substr(hash.indexOf('user_id=')).split('&')[0].split('=')[1];
        var room_id = hash.substr(hash.indexOf('room_id=')).split('&')[0].split('=')[1];

        var colors = [];

        var position = new naver.maps.LatLng(37.5078074, 127.0451858);

        var map = new naver.maps.Map('map', {
            center: position,
            zoom: 12
        });

        var paths = [];

        var socket = io.connect('http://goline.heek.kr:8081');

        socket.on('init', function(data){
            console.log(data);

            // THIS_IS_EXAMPLE_LOCATION
            // TODO: apply data
            var min_lat = 37.2380651;
            var min_lng = 131.8562652;
            var max_lat = 37.2444436;
            var max_lng = 131.8786475;
            var bounds = new naver.maps.LatLngBounds(
                new naver.maps.LatLng(min_lat, min_lng),
                new naver.maps.LatLng(max_lat, max_lng)
            );
            map.fitBounds(bounds);
        });

        socket.on('update', function(data){
            var userId = data.userId;

            var pos = new naver.maps.LatLng(data.pos['latitude'], data.pos['longitude']);

            if (paths[userId]==undefined) {
                console.log('create new path');
                paths[userId] = new naver.maps.Polyline({
                    map: map,
                    path: [],
                    strokeColor: '#5347AA',
                    strokeWeight: 2
                });
            }

            var path = paths[userId].getPath();
            path.push(pos);
        });

        socket.emit('init', {roomId: room_id});